.text           0x0000000000402470    0x2e012
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 .text.unlikely
                0x0000000000402470        0x0 /usr/lib/gcc/x86_64-linux-gnu/5/crtbegin.o
 .text.unlikely
                0x0000000000402470        0x0 main.o
 .text.unlikely
                0x0000000000402470        0x0 components.o
 .text.unlikely
                0x0000000000402470        0x0 frontend/libfrontend.a(cmd.o)
 .text.unlikely
                0x0000000000402470        0x0 frontend/libfrontend.a(debug.o)
 .text.unlikely
                0x0000000000402470        0x0 frontend/libfrontend.a(epd.o)
 .text.unlikely
                0x0000000000402470        0x0 frontend/libfrontend.a(genmove.o)
 .text.unlikely
                0x0000000000402470        0x0 frontend/libfrontend.a(init.o)
 .text.unlikely
                0x0000000000402470        0x0 frontend/libfrontend.a(move.o)
 .text.unlikely
                0x0000000000402470        0x0 frontend/libfrontend.a(output.o)
 .text.unlikely
                0x0000000000402470        0x0 frontend/libfrontend.a(players.o)
 .text.unlikely
                0x0000000000402470        0x0 frontend/libfrontend.a(pgn.o)
 .text.unlikely
                0x0000000000402470        0x0 frontend/libfrontend.a(solve.o)
 .text.unlikely
                0x0000000000402470        0x0 frontend/libfrontend.a(swap.o)
 .text.unlikely
                0x0000000000402470        0x0 frontend/libfrontend.a(util.o)
 .text.unlikely
                0x0000000000402470        0x0 frontend/libfrontend.a(engine.o)
 .text.unlikely
                0x0000000000402470        0x0 frontend/libfrontend.a(lexpgn.o)
 .text.unlikely
                0x0000000000402470        0x0 frontend/libfrontend.a(atak.o)
 .text.unlikely
                0x0000000000402470        0x0 adapter/libadapter.a(main.o)
 .text.unlikely
                0x0000000000402470        0x0 adapter/libadapter.a(option.o)
 .text.unlikely
                0x0000000000402470        0x0 adapter/libadapter.a(piece.o)
 .text.unlikely
                0x0000000000402470        0x0 adapter/libadapter.a(square.o)
 .text.unlikely
                0x0000000000402470        0x0 adapter/libadapter.a(uci.o)
 .text.unlikely
                0x0000000000402470        0x0 adapter/libadapter.a(util.o)
 .text.unlikely
                0x0000000000402470       0xd4 adapter/libadapter.a(adapter.o)
 .text.unlikely
                0x0000000000402544        0x0 adapter/libadapter.a(attack.o)
 .text.unlikely
                0x0000000000402544        0x0 adapter/libadapter.a(board.o)
 .text.unlikely
                0x0000000000402544        0x0 adapter/libadapter.a(book.o)
 .text.unlikely
                0x0000000000402544        0x0 adapter/libadapter.a(book_make.o)
 .text.unlikely
                0x0000000000402544        0x0 adapter/libadapter.a(book_merge.o)
 .text.unlikely
                0x0000000000402544        0x0 adapter/libadapter.a(colour.o)
 .text.unlikely
                0x0000000000402544        0x0 adapter/libadapter.a(engine.o)
 .text.unlikely
                0x0000000000402544        0x0 adapter/libadapter.a(epd.o)
 .text.unlikely
                0x0000000000402544        0x0 adapter/libadapter.a(fen.o)
 .text.unlikely
                0x0000000000402544        0x0 adapter/libadapter.a(game.o)
 .text.unlikely
                0x0000000000402544        0x0 adapter/libadapter.a(hash.o)
 .text.unlikely
                0x0000000000402544        0x0 adapter/libadapter.a(io.o)
 .text.unlikely
                0x0000000000402544        0x0 adapter/libadapter.a(line.o)
 .text.unlikely
                0x0000000000402544        0x0 adapter/libadapter.a(list.o)
 .text.unlikely
                0x0000000000402544        0x0 adapter/libadapter.a(move.o)
 .text.unlikely
                0x0000000000402544        0x0 adapter/libadapter.a(move_do.o)
 .text.unlikely
                0x0000000000402544        0x0 adapter/libadapter.a(move_gen.o)
 .text.unlikely
                0x0000000000402544        0x0 adapter/libadapter.a(move_legal.o)
 .text.unlikely
                0x0000000000402544        0x0 adapter/libadapter.a(parse.o)
 .text.unlikely
                0x0000000000402544        0x0 adapter/libadapter.a(pgn.o)
 .text.unlikely
                0x0000000000402544        0x0 adapter/libadapter.a(posix.o)
 .text.unlikely
                0x0000000000402544        0x0 adapter/libadapter.a(random.o)
 .text.unlikely
                0x0000000000402544        0x0 adapter/libadapter.a(san.o)
 .text.unlikely
                0x0000000000402544        0x0 engine/libengine.a(main.o)
 .text.unlikely
                0x0000000000402544        0x0 engine/libengine.a(move_do.o)
 .text.unlikely
                0x0000000000402544        0x0 engine/libengine.a(option.o)
 .text.unlikely
                0x0000000000402544        0x0 engine/libengine.a(pawn.o)
 .text.unlikely
                0x0000000000402544        0x0 engine/libengine.a(piece.o)
 .text.unlikely
                0x0000000000402544        0x0 engine/libengine.a(protocol.o)
 .text.unlikely
                0x0000000000402544        0x0 engine/libengine.a(pst.o)
 .text.unlikely
                0x0000000000402544        0x0 engine/libengine.a(random.o)
 .text.unlikely
                0x0000000000402544        0x0 engine/libengine.a(search.o)
 .text.unlikely
                0x0000000000402544        0x0 engine/libengine.a(search_full.o)
 .text.unlikely
                0x0000000000402544        0x0 engine/libengine.a(see.o)
 .text.unlikely
                0x0000000000402544        0x0 engine/libengine.a(sort.o)
 .text.unlikely
                0x0000000000402544        0x0 engine/libengine.a(square.o)
 .text.unlikely
                0x0000000000402544        0x0 engine/libengine.a(trans.o)
 .text.unlikely
                0x0000000000402544       0x1c engine/libengine.a(util.o)
 .text.unlikely
                0x0000000000402560        0x0 engine/libengine.a(value.o)
 .text.unlikely
                0x0000000000402560        0x0 engine/libengine.a(vector.o)
 .text.unlikely
                0x0000000000402560        0x0 engine/libengine.a(attack.o)
 .text.unlikely
                0x0000000000402560        0x0 engine/libengine.a(board.o)
 .text.unlikely
                0x0000000000402560        0x0 engine/libengine.a(book.o)
 .text.unlikely
                0x0000000000402560        0x0 engine/libengine.a(eval.o)
 .text.unlikely
                0x0000000000402560        0x0 engine/libengine.a(fen.o)
 .text.unlikely
                0x0000000000402560        0x0 engine/libengine.a(hash.o)
 .text.unlikely
                0x0000000000402560        0x0 engine/libengine.a(list.o)
 .text.unlikely
                0x0000000000402560        0x0 engine/libengine.a(material.o)
 .text.unlikely
                0x0000000000402560        0x0 engine/libengine.a(move.o)
 .text.unlikely
                0x0000000000402560        0x0 engine/libengine.a(move_check.o)
 .text.unlikely
                0x0000000000402560        0x0 engine/libengine.a(move_evasion.o)
 .text.unlikely
                0x0000000000402560        0x0 engine/libengine.a(move_gen.o)
 .text.unlikely
                0x0000000000402560        0x0 engine/libengine.a(move_legal.o)
 .text.unlikely
                0x0000000000402560        0x0 engine/libengine.a(posix.o)
 .text.unlikely
                0x0000000000402560        0x0 engine/libengine.a(pv.o)
 .text.unlikely
                0x0000000000402560        0x0 engine/libengine.a(recog.o)
 .text.unlikely
                0x0000000000402560        0x0 /usr/lib/x86_64-linux-gnu/libc_nonshared.a(elf-init.oS)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 .text.startup  0x0000000000402560      0x79b main.o
                0x0000000000402560                main
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 *fill*         0x0000000000402cfb        0x5 
 .text          0x0000000000402d00       0x2a /usr/lib/gcc/x86_64-linux-gnu/5/../../../x86_64-linux-gnu/crt1.o
                0x0000000000402d00                _start
 .text          0x0000000000402d2a        0x0 /usr/lib/gcc/x86_64-linux-gnu/5/../../../x86_64-linux-gnu/crti.o
 *fill*         0x0000000000402d2a        0x6 
 .text          0x0000000000402d30       0xc6 /usr/lib/gcc/x86_64-linux-gnu/5/crtbegin.o
 .text          0x0000000000402df6        0x0 main.o
 *fill*         0x0000000000402df6        0xa 
 .text          0x0000000000402e00      0x1ab components.o
                0x0000000000402e00                engine_func(void*)
                0x0000000000402e20                InitAdapter()
                0x0000000000402eb0                InitEngine()
                0x0000000000402f10                adapter_func(void*)
                0x0000000000402f30                TerminateAdapterEngine()
 *fill*         0x0000000000402fab        0x5 
 .text          0x0000000000402fb0     0x2863 frontend/libfrontend.a(cmd.o)
                0x0000000000402fb0                cmd_variant()
                0x0000000000402fc0                cmd_bk()
                0x0000000000402fd0                cmd_movenow()
                0x0000000000402fe0                cmd_protover()
                0x0000000000402ff0                cmd_otim()
                0x0000000000403000                cmd_ics()
                0x0000000000403010                cmd_hint()
                0x0000000000403020                cmd_hard()
                0x0000000000403030                cmd_easy()
                0x0000000000403040                cmd_accepted()
                0x0000000000403050                cmd_activate()
                0x0000000000403080                cmd_black()
                0x00000000004030b0                cmd_graphic()
                0x00000000004030e0                cmd_nographic()
                0x0000000000403110                cmd_random()
                0x0000000000403140                cmd_switch()
                0x0000000000403170                cmd_white()
                0x00000000004031a0                cmd_test()
                0x00000000004031d0                cmd_analyze()
                0x0000000000403200                cmd_force()
                0x0000000000403230                cmd_manual()
                0x0000000000403260                cmd_nopost()
                0x0000000000403290                cmd_quit()
                0x0000000000403370                cmd_hash()
                0x0000000000403420                cmd_null()
                0x00000000004034d0                cmd_time()
                0x00000000004035b0                cmd_depth()
                0x0000000000403660                cmd_ping()
                0x00000000004036a0                cmd_post()
                0x00000000004036e0                cmd_go()
                0x0000000000403780                cmd_level()
                0x00000000004038d0                cmd_st()
                0x0000000000403990                cmd_rating()
                0x0000000000403a10                cmd_new()
                0x0000000000403a90                cmd_undo()
                0x0000000000403b60                cmd_remove()
                0x0000000000403c40                cmd_result()
                0x0000000000403cf0                cmd_solve()
                0x0000000000403d00                cmd_usage()
                0x0000000000403f60                cmd_usermove()
                0x0000000000404110                cmd_help()
                0x0000000000404270                cmd_version()
                0x00000000004042b0                cmd_exit()
                0x00000000004042f0                cmd_xboard()
                0x0000000000404390                cmd_book()
                0x00000000004045f0                cmd_pgnload()
                0x0000000000404760                cmd_edit()
                0x0000000000404790                cmd_memory()
                0x0000000000404860                cmd_list()
                0x00000000004048f0                cmd_name()
                0x0000000000404a20                cmd_next()
                0x0000000000404af0                cmd_previous()
                0x0000000000404bc0                cmd_last()
                0x0000000000404d30                cmd_first()
                0x0000000000404d50                cmd_pgnreplay()
                0x0000000000404fb0                cmd_save()
                0x0000000000404fd0                cmd_pgnsave()
                0x0000000000404ff0                cmd_show()
                0x0000000000405270                cmd_rejected()
                0x0000000000405280                parse_input()
                0x0000000000405550                check_board()
                0x00000000004055d0                cmd_load()
                0x0000000000405780                cmd_setboard()
 *fill*         0x0000000000405813        0xd 
 .text          0x0000000000405820       0x23 frontend/libfrontend.a(debug.o)
                0x0000000000405820                dbg_open(char const*)
                0x0000000000405830                dbg_printf(char const*, ...)
                0x0000000000405840                dbg_close()
 *fill*         0x0000000000405843        0xd 
 .text          0x0000000000405850      0xeee frontend/libfrontend.a(epd.o)
                0x0000000000405850                ParseEPD(char*)
                0x0000000000406210                ReadEPDFile(char const*, short)
                0x00000000004063d0                LoadEPD(char*)
                0x00000000004064a0                SaveEPD(char*)
 *fill*         0x000000000040673e        0x2 
 .text          0x0000000000406740     0x3460 frontend/libfrontend.a(genmove.o)
                0x0000000000406740                GenMoves(short)
                0x0000000000407890                GenNonCaptures(short)
                0x00000000004084a0                GenCaptures(short)
                0x0000000000409290                GenCheckEscapes(short)
                0x0000000000409ab0                FilterIllegalMoves(short)
 .text          0x0000000000409ba0     0x1091 frontend/libfrontend.a(init.o)
                0x0000000000409ba0                InitLzArray()
                0x0000000000409be0                InitBitPosArray()
                0x0000000000409c20                InitMoveArray()
                0x0000000000409d30                InitRay()
                0x0000000000409e80                InitFromToRay()
                0x0000000000409fc0                InitRankFileBit()
                0x000000000040a010                InitBitCount()
                0x000000000040a080                InitRotAtak()
                0x000000000040a720                InitVars()
                0x000000000040aaa0                Initialize()
                0x000000000040abd0                NewPosition()
 *fill*         0x000000000040ac31        0xf 
 .text          0x000000000040ac40     0x1d9f frontend/libfrontend.a(move.o)
                0x000000000040ac40                MakeMove(int, int*)
                0x000000000040b600                UnmakeMove(int, int*)
                0x000000000040bb20                SANMove(int, int)
                0x000000000040be80                IsInMoveList(int, int, int, char)
                0x000000000040bf10                AlgbrMove(int)
                0x000000000040bfa0                ValidateMove(char*)
 *fill*         0x000000000040c9df        0x1 
 .text          0x000000000040c9e0      0xd9a frontend/libfrontend.a(output.o)
                0x000000000040c9e0                ShowTime()
                0x000000000040c9f0                ShowMoveList(int)
                0x000000000040cac0                ShowSmallBoard()
                0x000000000040ce20                ShowBoard()
                0x000000000040d560                ShowCBoard()
                0x000000000040d5e0                ShowMvboard()
                0x000000000040d650                ShowGame()
 *fill*         0x000000000040d77a        0x6 
 .text          0x000000000040d780      0x572 frontend/libfrontend.a(players.o)
                0x000000000040d870                DBSortPlayer(char const*)
                0x000000000040d910                DBWritePlayer()
                0x000000000040d9a0                DBReadPlayer()
                0x000000000040da30                DBListPlayer(char const*)
                0x000000000040db10                DBSearchPlayer(char const*)
                0x000000000040db90                DBUpdatePlayer(char const*, char const*)
 *fill*         0x000000000040dcf2        0xe 
 .text          0x000000000040dd00      0x6da frontend/libfrontend.a(pgn.o)
                0x000000000040dd00                PGNSaveToFile(char const*, char const*)
                0x000000000040e270                PGNReadFromFile(char const*, int)
                0x000000000040e390                IsTrustedPlayer(char const*)
 *fill*         0x000000000040e3da        0x6 
 .text          0x000000000040e3e0      0x205 frontend/libfrontend.a(solve.o)
                0x000000000040e3e0                Solve(char*)
 *fill*         0x000000000040e5e5        0xb 
 .text          0x000000000040e5f0      0x513 frontend/libfrontend.a(swap.o)
                0x000000000040e5f0                AddXrayPiece(int, int, int, unsigned long*, unsigned long*)
                0x000000000040e700                SwapOff(int)
 *fill*         0x000000000040eb03        0xd 
 .text          0x000000000040eb10      0x371 frontend/libfrontend.a(util.o)
                0x000000000040eb10                UpdateFriends()
                0x000000000040eb90                UpdateCBoard()
                0x000000000040ec70                UpdateMvboard()
                0x000000000040ecc0                ValidateBoard()
 *fill*         0x000000000040ee81        0xf 
 .text          0x000000000040ee90      0xf42 frontend/libfrontend.a(engine.o)
                0x000000000040efa0                InitFrontend()
                0x000000000040efc0                SendToEngine(char*)
                0x000000000040f040                ReadFromEngine()
                0x000000000040f1c0                ReadFromUser()
                0x000000000040f310                SetDataToEngine(char const*)
                0x000000000040f330                ExpectAnswerFromEngine(int)
                0x000000000040f340                ShowPrompt()
                0x000000000040f430                NextUserCmd()
                0x000000000040f610                NextEngineCmd()
                0x000000000040f8b0                SetUserInputValidMove(int)
                0x000000000040f8c0                ChangeColor(int)
                0x000000000040f8d0                SetAutoGo(int)
                0x000000000040f8e0                GetAutoGo()
                0x000000000040f8f0                SolvePosition(char*, char const*)
                0x000000000040fae0                ForwardUserInputToEngine()
                0x000000000040fc90                ForwardEngineOutputToUser()
 *fill*         0x000000000040fdd2        0xe 
 .text          0x000000000040fde0     0x22f5 frontend/libfrontend.a(lexpgn.o)
                0x000000000040ff80                return_append_str(char*, char const*)
                0x0000000000410020                append_str(char**, char const*)
                0x0000000000410040                append_comment(char const*)
                0x00000000004100a0                yy_switch_to_buffer(yy_buffer_state*)
                0x0000000000410150                yy_delete_buffer(yy_buffer_state*)
                0x00000000004101c0                yy_flush_buffer(yy_buffer_state*)
                0x00000000004102d0                yy_create_buffer(_IO_FILE*, int)
                0x0000000000410330                yyrestart(_IO_FILE*)
                0x0000000000410400                yylex()
                0x0000000000411cd0                yypush_buffer_state(yy_buffer_state*)
                0x0000000000411d90                yypop_buffer_state()
                0x0000000000411e20                yy_scan_buffer(char*, unsigned long)
                0x0000000000411ec0                yy_scan_bytes(char const*, unsigned long)
                0x0000000000411f40                yy_scan_string(char const*)
                0x0000000000411f60                yyget_lineno()
                0x0000000000411f70                yyget_in()
                0x0000000000411f80                yyget_out()
                0x0000000000411f90                yyget_leng()
                0x0000000000411fa0                yyget_text()
                0x0000000000411fb0                yyset_lineno(int)
                0x0000000000411fc0                yyset_in(_IO_FILE*)
                0x0000000000411fd0                yyset_out(_IO_FILE*)
                0x0000000000411fe0                yyget_debug()
                0x0000000000411ff0                yyset_debug(int)
                0x0000000000412000                yylex_destroy()
                0x00000000004120b0                yyalloc(unsigned long)
                0x00000000004120c0                yyrealloc(void*, unsigned long)
                0x00000000004120d0                yyfree(void*)
 *fill*         0x00000000004120d5        0xb 
 .text          0x00000000004120e0      0x4ff frontend/libfrontend.a(atak.o)
                0x00000000004120e0                SqAtakd(short, short)
                0x00000000004122c0                AttackTo(int, int)
                0x0000000000412480                PinnedOnKing(int, int)
 *fill*         0x00000000004125df        0x1 
 .text          0x00000000004125e0      0x5cc adapter/libadapter.a(main.o)
                0x00000000004129c0                adapter::main_adapter(int, char**)
                0x0000000000412b40                adapter::quit()
 *fill*         0x0000000000412bac        0x4 
 .text          0x0000000000412bb0      0x3e5 adapter/libadapter.a(option.o)
                0x0000000000412bb0                adapter::option_set(char const*, char const*)
                0x0000000000412c20                adapter::option_init()
                0x0000000000412e50                adapter::option_get(char const*)
                0x0000000000412ec0                adapter::option_get_bool(char const*)
                0x0000000000412f50                adapter::option_get_double(char const*)
                0x0000000000412f70                adapter::option_get_int(char const*)
                0x0000000000412f90                adapter::option_get_string(char const*)
 *fill*         0x0000000000412f95        0xb 
 .text          0x0000000000412fa0      0x1bb adapter/libadapter.a(piece.o)
                0x0000000000412fa0                adapter::piece_init()
                0x0000000000412ff0                adapter::piece_is_ok(int)
                0x0000000000413010                adapter::piece_make_pawn(int)
                0x0000000000413020                adapter::piece_pawn_opp(int)
                0x0000000000413030                adapter::piece_colour(int)
                0x0000000000413040                adapter::piece_type(int)
                0x0000000000413050                adapter::piece_is_pawn(int)
                0x0000000000413060                adapter::piece_is_knight(int)
                0x0000000000413070                adapter::piece_is_bishop(int)
                0x0000000000413080                adapter::piece_is_rook(int)
                0x0000000000413090                adapter::piece_is_queen(int)
                0x00000000004130a0                adapter::piece_is_king(int)
                0x00000000004130b0                adapter::piece_is_slider(int)
                0x00000000004130c0                adapter::piece_to_12(int)
                0x00000000004130d0                adapter::piece_from_12(int)
                0x00000000004130e0                adapter::piece_to_char(int)
                0x0000000000413100                adapter::piece_from_char(int)
                0x0000000000413140                adapter::char_is_piece(int)
 *fill*         0x000000000041315b        0x5 
 .text          0x0000000000413160      0x1f7 adapter/libadapter.a(square.o)
                0x0000000000413160                adapter::square_init()
                0x00000000004131b0                adapter::square_is_ok(int)
                0x00000000004131d0                adapter::square_make(int, int)
                0x00000000004131e0                adapter::square_file(int)
                0x00000000004131f0                adapter::square_rank(int)
                0x0000000000413200                adapter::square_side_rank(int, int)
                0x0000000000413230                adapter::square_from_64(int)
                0x0000000000413240                adapter::square_to_64(int)
                0x0000000000413250                adapter::square_is_promote(int)
                0x0000000000413270                adapter::square_ep_dual(int)
                0x0000000000413280                adapter::square_colour(int)
                0x0000000000413290                adapter::file_from_char(int)
                0x00000000004132a0                adapter::rank_from_char(int)
                0x00000000004132b0                adapter::file_to_char(int)
                0x00000000004132c0                adapter::rank_to_char(int)
                0x00000000004132d0                adapter::char_is_file(int)
                0x00000000004132e0                adapter::char_is_rank(int)
                0x00000000004132f0                adapter::square_to_string(int, char*, int)
                0x0000000000413320                adapter::square_from_string(char const*)
 *fill*         0x0000000000413357        0x9 
 .text          0x0000000000413360     0x1328 adapter/libadapter.a(uci.o)
                0x0000000000413360                adapter::uci_close(adapter::uci_t*)
                0x00000000004133d0                adapter::uci_clear(adapter::uci_t*)
                0x00000000004134a0                adapter::uci_send_isready(adapter::uci_t*)
                0x00000000004134c0                adapter::uci_send_stop(adapter::uci_t*)
                0x00000000004134e0                adapter::uci_send_ucinewgame(adapter::uci_t*)
                0x0000000000413510                adapter::uci_option_exist(adapter::uci_t*, char const*)
                0x0000000000413570                adapter::uci_send_option(adapter::uci_t*, char const*, char const*, ...)
                0x00000000004136e0                adapter::uci_parse(adapter::uci_t*, char const*)
                0x00000000004144b0                adapter::uci_open(adapter::uci_t*, adapter::engine_t*)
                0x0000000000414590                adapter::uci_send_isready_sync(adapter::uci_t*)
                0x0000000000414610                adapter::uci_send_stop_sync(adapter::uci_t*)
 *fill*         0x0000000000414688        0x8 
 .text          0x0000000000414690      0x81f adapter/libadapter.a(util.o)
                0x0000000000414690                adapter::util_init()
                0x00000000004146d0                adapter::my_random_init()
                0x00000000004146f0                adapter::my_random_int(int)
                0x0000000000414720                adapter::my_random_double()
                0x0000000000414740                adapter::my_atoll(char const*)
                0x0000000000414780                adapter::my_round(double)
                0x00000000004147a0                adapter::my_free(void*)
                0x00000000004147b0                adapter::my_log_open(char const*)
                0x00000000004147f0                adapter::my_log_close()
                0x0000000000414810                adapter::my_log(char const*, ...)
                0x00000000004148e0                adapter::my_fatal(char const*, ...)
                0x0000000000414a30                adapter::my_malloc(int)
                0x0000000000414a60                adapter::my_realloc(void*, int)
                0x0000000000414aa0                adapter::my_file_read_line(_IO_FILE*, char*, int)
                0x0000000000414b30                adapter::my_string_empty(char const*)
                0x0000000000414b50                adapter::my_string_equal(char const*, char const*)
                0x0000000000414b70                adapter::my_string_case_equal(char const*, char const*)
                0x0000000000414bd0                adapter::my_strdup(char const*)
                0x0000000000414c20                adapter::my_string_clear(char const**)
                0x0000000000414c40                adapter::my_string_set(char const**, char const*)
                0x0000000000414c70                adapter::my_timer_reset(adapter::my_timer_t*)
                0x0000000000414c90                adapter::my_timer_start(adapter::my_timer_t*)
                0x0000000000414cb0                adapter::my_timer_stop(adapter::my_timer_t*)
                0x0000000000414cf0                adapter::my_timer_elapsed_real(adapter::my_timer_t const*)
                0x0000000000414d40                adapter::my_timer_elapsed_cpu(adapter::my_timer_t const*)
                0x0000000000414d90                adapter::my_timer_cpu_usage(adapter::my_timer_t const*)
                0x0000000000414e90                adapter::compute_pkgdatadir()
 *fill*         0x0000000000414eaf        0x1 
 .text          0x0000000000414eb0     0x2a53 adapter/libadapter.a(adapter.o)
                0x0000000000417620                adapter::adapter_loop()
 *fill*         0x0000000000417903        0xd 
 .text          0x0000000000417910      0x32e adapter/libadapter.a(attack.o)
                0x0000000000417910                adapter::attack_init()
                0x0000000000417a50                adapter::piece_attack(adapter::board_t const*, int, int, int)
                0x0000000000417ad0                adapter::is_attacked(adapter::board_t const*, int, int)
                0x0000000000417b30                adapter::is_in_check(adapter::board_t const*, int)
                0x0000000000417b60                adapter::is_pinned(adapter::board_t const*, int, int, int)
 *fill*         0x0000000000417c3e        0x2 
 .text          0x0000000000417c40      0x70a adapter/libadapter.a(board.o)
                0x0000000000417c40                adapter::board_is_ok(adapter::board_t const*)
                0x0000000000417c50                adapter::board_clear(adapter::board_t*)
                0x0000000000417d50                adapter::board_start(adapter::board_t*)
                0x0000000000417d60                adapter::board_copy(adapter::board_t*, adapter::board_t const*)
                0x0000000000417d70                adapter::board_equal(adapter::board_t const*, adapter::board_t const*)
                0x0000000000417e40                adapter::board_init_list(adapter::board_t*)
                0x00000000004180a0                adapter::board_flags(adapter::board_t const*)
                0x00000000004180e0                adapter::board_can_play(adapter::board_t const*)
                0x0000000000418160                adapter::board_mobility(adapter::board_t const*)
                0x00000000004181b0                adapter::board_is_check(adapter::board_t const*)
                0x00000000004181c0                adapter::board_is_mate(adapter::board_t const*)
                0x00000000004181f0                adapter::board_is_stalemate(adapter::board_t const*)
                0x0000000000418220                adapter::king_pos(adapter::board_t const*, int)
                0x0000000000418230                adapter::board_disp(adapter::board_t const*)
 *fill*         0x000000000041834a        0x6 
 .text          0x0000000000418350      0xa9f adapter/libadapter.a(book.o)
                0x00000000004185b0                adapter::book_clear()
                0x00000000004185d0                adapter::book_open(char const*, int)
                0x00000000004187a0                adapter::book_close()
                0x00000000004187e0                adapter::is_in_book(adapter::board_t const*)
                0x0000000000418870                adapter::book_move(adapter::board_t const*, bool)
                0x0000000000418980                adapter::book_move(adapter::board_t const*, bool, bool)
                0x0000000000418ae0                adapter::book_disp(adapter::board_t const*)
                0x0000000000418c50                adapter::book_learn_move(adapter::board_t const*, int, int)
                0x0000000000418db0                adapter::book_flush()
 *fill*         0x0000000000418def        0x1 
 .text          0x0000000000418df0      0xb1a adapter/libadapter.a(book_make.o)
                0x00000000004192b0                adapter::book_make(int, char**)
 *fill*         0x000000000041990a        0x6 
 .text          0x0000000000419910      0x6a1 adapter/libadapter.a(book_merge.o)
                0x0000000000419c10                adapter::book_merge(int, char**)
 *fill*         0x0000000000419fb1        0xf 
 .text          0x0000000000419fc0       0x46 adapter/libadapter.a(colour.o)
                0x0000000000419fc0                adapter::colour_is_ok(int)
                0x0000000000419fd0                adapter::colour_is_white(int)
                0x0000000000419fe0                adapter::colour_is_black(int)
                0x0000000000419ff0                adapter::colour_equal(int, int)
                0x000000000041a000                adapter::colour_opp(int)
 *fill*         0x000000000041a006        0xa 
 .text          0x000000000041a010      0x29d adapter/libadapter.a(engine.o)
                0x000000000041a010                adapter::engine_is_ok(adapter::engine_t const*)
                0x000000000041a030                adapter::engine_open(adapter::engine_t*)
                0x000000000041a050                adapter::engine_close(adapter::engine_t*)
                0x000000000041a060                adapter::engine_get(adapter::engine_t*, char*, int)
                0x000000000041a0b0                adapter::engine_send(adapter::engine_t*, char const*, ...)
                0x000000000041a1b0                adapter::engine_send_queue(adapter::engine_t*, char const*, ...)
 *fill*         0x000000000041a2ad        0x3 
 .text          0x000000000041a2b0      0xb1c adapter/libadapter.a(epd.o)
                0x000000000041a430                adapter::epd_get_op(char const*, char const*, char*, int)
                0x000000000041aaf0                adapter::epd_test(int, char**)
 *fill*         0x000000000041adcc        0x4 
 .text          0x000000000041add0      0xad0 adapter/libadapter.a(fen.o)
                0x000000000041add0                adapter::fen_fatal(char const*, int, char const*)
                0x000000000041af70                adapter::board_from_fen(adapter::board_t*, char const*)
                0x000000000041b560                adapter::board_to_fen(adapter::board_t const*, char*, int)
 .text          0x000000000041b8a0      0x518 adapter/libadapter.a(game.o)
                0x000000000041ba30                adapter::game_is_ok(adapter::game_t const*)
                0x000000000041ba70                adapter::game_init(adapter::game_t*, char const*)
                0x000000000041bac0                adapter::game_clear(adapter::game_t*)
                0x000000000041bad0                adapter::game_status(adapter::game_t const*)
                0x000000000041bae0                adapter::game_size(adapter::game_t const*)
                0x000000000041baf0                adapter::game_pos(adapter::game_t const*)
                0x000000000041bb00                adapter::game_move(adapter::game_t const*, int)
                0x000000000041bb10                adapter::game_get_board(adapter::game_t const*, adapter::board_t*, int)
                0x000000000041bb90                adapter::game_turn(adapter::game_t const*)
                0x000000000041bba0                adapter::game_move_nb(adapter::game_t const*)
                0x000000000041bbb0                adapter::game_add_move(adapter::game_t*, int)
                0x000000000041bc40                adapter::game_goto(adapter::game_t*, int)
                0x000000000041bcd0                adapter::game_rem_move(adapter::game_t*)
                0x000000000041bd00                adapter::game_disp(adapter::game_t const*)
 *fill*         0x000000000041bdb8        0x8 
 .text          0x000000000041bdc0      0x1a6 adapter/libadapter.a(hash.o)
                0x000000000041bdc0                adapter::hash_init()
                0x000000000041be20                adapter::hash_piece_key(int, int)
                0x000000000041be50                adapter::hash_key(adapter::board_t const*)
                0x000000000041bf10                adapter::hash_castle_key(int)
                0x000000000041bf20                adapter::hash_ep_key(int)
                0x000000000041bf40                adapter::hash_turn_key(int)
 *fill*         0x000000000041bf66        0xa 
 .text          0x000000000041bf70      0x65f adapter/libadapter.a(io.o)
                0x000000000041bf70                adapter::io_is_ok(adapter::io_t const*)
                0x000000000041bfb0                adapter::io_init(adapter::io_t*)
                0x000000000041bfd0                adapter::io_close(adapter::io_t*)
                0x000000000041c030                adapter::io_get_update(adapter::io_t*)
                0x000000000041c0e0                adapter::io_line_ready(adapter::io_t const*)
                0x000000000041c110                adapter::io_get_line(adapter::io_t*, char*, int)
                0x000000000041c220                adapter::io_send(adapter::io_t*, char const*, ...)
                0x000000000041c460                adapter::io_send_queue(adapter::io_t*, char const*, ...)
 *fill*         0x000000000041c5cf        0x1 
 .text          0x000000000041c5d0      0x3cd adapter/libadapter.a(line.o)
                0x000000000041c5d0                adapter::line_is_ok(unsigned short const*)
                0x000000000041c610                adapter::line_clear(unsigned short*)
                0x000000000041c620                adapter::line_copy(unsigned short*, unsigned short const*)
                0x000000000041c640                adapter::line_from_can(unsigned short*, adapter::board_t const*, char const*, int)
                0x000000000041c760                adapter::line_to_can(unsigned short const*, adapter::board_t const*, char*, int)
                0x000000000041c870                adapter::line_to_san(unsigned short const*, adapter::board_t const*, char*, int)
 *fill*         0x000000000041c99d        0x3 
 .text          0x000000000041c9a0      0x55a adapter/libadapter.a(list.o)
                0x000000000041c9a0                adapter::list_is_ok(adapter::list_t const*)
                0x000000000041c9c0                adapter::list_clear(adapter::list_t*)
                0x000000000041c9d0                adapter::list_add(adapter::list_t*, int, int)
                0x000000000041c9f0                adapter::list_remove(adapter::list_t*, int)
                0x000000000041ca30                adapter::list_is_empty(adapter::list_t const*)
                0x000000000041ca40                adapter::list_size(adapter::list_t const*)
                0x000000000041ca50                adapter::list_move(adapter::list_t const*, int)
                0x000000000041ca60                adapter::list_value(adapter::list_t const*, int)
                0x000000000041ca70                adapter::list_copy(adapter::list_t*, adapter::list_t const*)
                0x000000000041cad0                adapter::list_move_to_front(adapter::list_t*, int)
                0x000000000041cb20                adapter::list_note(adapter::list_t*)
                0x000000000041cb60                adapter::list_sort(adapter::list_t*)
                0x000000000041cc10                adapter::list_contain(adapter::list_t const*, int)
                0x000000000041cc50                adapter::list_equal(adapter::list_t*, adapter::list_t*)
                0x000000000041ce40                adapter::list_disp(adapter::list_t const*, adapter::board_t const*)
 *fill*         0x000000000041cefa        0x6 
 .text          0x000000000041cf00      0x661 adapter/libadapter.a(move.o)
                0x000000000041cf00                adapter::move_is_ok(int)
                0x000000000041cf10                adapter::move_make(int, int)
                0x000000000041cf40                adapter::move_make_flags(int, int, int)
                0x000000000041cf70                adapter::move_from(int)
                0x000000000041cf80                adapter::move_to(int)
                0x000000000041cf90                adapter::move_promote_hack(int)
                0x000000000041cfa0                adapter::move_is_promote(int)
                0x000000000041cfb0                adapter::move_is_en_passant(int, adapter::board_t const*)
                0x000000000041d000                adapter::move_is_capture(int, adapter::board_t const*)
                0x000000000041d030                adapter::move_is_castle(int, adapter::board_t const*)
                0x000000000041d180                adapter::move_piece(int, adapter::board_t const*)
                0x000000000041d1a0                adapter::move_capture(int, adapter::board_t const*)
                0x000000000041d1f0                adapter::move_promote(int, adapter::board_t const*)
                0x000000000041d220                adapter::move_is_check(int, adapter::board_t const*)
                0x000000000041d280                adapter::move_is_mate(int, adapter::board_t const*)
                0x000000000041d2e0                adapter::move_to_can(int, adapter::board_t const*, char*, int)
                0x000000000041d300                adapter::move_from_can(char const*, adapter::board_t const*)
                0x000000000041d500                adapter::move_order(int)
                0x000000000041d510                adapter::move_disp(int, adapter::board_t const*)
 *fill*         0x000000000041d561        0xf 
 .text          0x000000000041d570      0x649 adapter/libadapter.a(move_do.o)
                0x000000000041d7c0                adapter::move_do(adapter::board_t*, int)
 *fill*         0x000000000041dbb9        0x7 
 .text          0x000000000041dbc0      0x832 adapter/libadapter.a(move_gen.o)
                0x000000000041dc30                adapter::gen_moves(adapter::list_t*, adapter::board_t const*)
                0x000000000041e3d0                adapter::gen_legal_moves(adapter::list_t*, adapter::board_t const*)
 *fill*         0x000000000041e3f2        0xe 
 .text          0x000000000041e400      0x175 adapter/libadapter.a(move_legal.o)
                0x000000000041e400                adapter::move_is_pseudo(int, adapter::board_t const*)
                0x000000000041e450                adapter::pseudo_is_legal(int, adapter::board_t const*)
                0x000000000041e4c0                adapter::move_is_legal(int, adapter::board_t const*)
                0x000000000041e4f0                adapter::filter_legal(adapter::list_t*, adapter::board_t const*)
 *fill*         0x000000000041e575        0xb 
 .text          0x000000000041e580      0x5c7 adapter/libadapter.a(parse.o)
                0x000000000041e680                adapter::match(char*, char const*)
                0x000000000041e690                adapter::parse_is_ok(adapter::parse_t const*)
                0x000000000041e6f0                adapter::parse_open(adapter::parse_t*, char const*)
                0x000000000041e710                adapter::parse_close(adapter::parse_t*)
                0x000000000041e760                adapter::parse_add_keyword(adapter::parse_t*, char const*)
                0x000000000041e790                adapter::parse_get_word(adapter::parse_t*, char*, int)
                0x000000000041e860                adapter::parse_get_string(adapter::parse_t*, char*, int)
 *fill*         0x000000000041eb47        0x9 
 .text          0x000000000041eb50      0xb49 adapter/libadapter.a(pgn.o)
                0x000000000041f1b0                adapter::pgn_open(adapter::pgn_t*, char const*)
                0x000000000041f290                adapter::pgn_close(adapter::pgn_t*)
                0x000000000041f2a0                adapter::pgn_next_game(adapter::pgn_t*)
                0x000000000041f4f0                adapter::pgn_next_move(adapter::pgn_t*, char*, int)
 *fill*         0x000000000041f699        0x7 
 .text          0x000000000041f6a0      0x1da adapter/libadapter.a(posix.o)
                0x000000000041f6a0                adapter::input_available()
                0x000000000041f750                adapter::now_real()
                0x000000000041f7f0                adapter::now_cpu()
 *fill*         0x000000000041f87a        0x6 
 .text          0x000000000041f880       0x1c adapter/libadapter.a(random.o)
                0x000000000041f880                adapter::random_init()
                0x000000000041f890                adapter::random_64(int)
 *fill*         0x000000000041f89c        0x4 
 .text          0x000000000041f8a0      0xc99 adapter/libadapter.a(san.o)
                0x000000000041fd50                adapter::move_to_san(int, adapter::board_t const*, char*, int)
                0x000000000041fd70                adapter::move_from_san(char const*, adapter::board_t const*)
                0x0000000000420490                adapter::move_from_san_debug(char const*, adapter::board_t const*)
 *fill*         0x0000000000420539        0x7 
 .text          0x0000000000420540       0xae engine/libengine.a(main.o)
                0x0000000000420540                engine::main_engine(int, char**)
 *fill*         0x00000000004205ee        0x2 
 .text          0x00000000004205f0      0xc77 engine/libengine.a(move_do.o)
                0x0000000000420b90                engine::move_do_init()
                0x0000000000420bf0                engine::move_do(engine::board_t*, int, engine::undo_t*)
                0x0000000000420fc0                engine::move_undo(engine::board_t*, int, engine::undo_t const*)
                0x0000000000421190                engine::move_do_null(engine::board_t*, engine::undo_t*)
                0x0000000000421230                engine::move_undo_null(engine::board_t*, engine::undo_t const*)
 *fill*         0x0000000000421267        0x9 
 .text          0x0000000000421270      0x245 engine/libengine.a(option.o)
                0x0000000000421270                engine::option_list()
                0x00000000004212f0                engine::option_set(char const*, char const*)
                0x0000000000421360                engine::option_init()
                0x0000000000421390                engine::option_get(char const*)
                0x0000000000421400                engine::option_get_bool(char const*)
                0x0000000000421490                engine::option_get_int(char const*)
                0x00000000004214b0                engine::option_get_string(char const*)
 *fill*         0x00000000004214b5        0xb 
 .text          0x00000000004214c0      0x9e0 engine/libengine.a(pawn.o)
                0x00000000004214c0                engine::pawn_init_bit()
                0x0000000000421630                engine::pawn_init()
                0x00000000004216c0                engine::pawn_clear()
                0x0000000000421720                engine::pawn_alloc()
                0x0000000000421760                engine::pawn_get_info(engine::pawn_info_t*, engine::board_t const*)
                0x0000000000421e80                engine::quad(int, int, int)
 .text          0x0000000000421ea0      0x1a7 engine/libengine.a(piece.o)
                0x0000000000421ea0                engine::piece_init()
                0x0000000000421fc0                engine::piece_is_ok(int)
                0x0000000000421fe0                engine::piece_from_12(int)
                0x0000000000421ff0                engine::piece_to_char(int)
                0x0000000000422010                engine::piece_from_char(int)
 *fill*         0x0000000000422047        0x9 
 .text          0x0000000000422050      0xeb0 engine/libengine.a(protocol.o)
                0x00000000004220b0                engine::get(char*, int)
                0x00000000004220e0                engine::send(char const*, ...)
                0x0000000000422e70                engine::loop()
                0x0000000000422ec0                engine::event()
 .text          0x0000000000422f00      0x59b engine/libengine.a(pst.o)
                0x0000000000422f00                engine::pst_init()
 *fill*         0x000000000042349b        0x5 
 .text          0x00000000004234a0        0x2 engine/libengine.a(random.o)
                0x00000000004234a0                engine::random_init()
 *fill*         0x00000000004234a2        0xe 
 .text          0x00000000004234b0      0x8e3 engine/libengine.a(search.o)
                0x00000000004234b0                engine::depth_is_ok(int)
                0x00000000004234c0                engine::height_is_ok(int)
                0x00000000004234d0                engine::search_clear()
                0x00000000004235e0                engine::search_update_current()
                0x0000000000423660                engine::search_update_best()
                0x00000000004238e0                engine::search()
                0x0000000000423bf0                engine::search_update_root()
                0x0000000000423c70                engine::search_check()
 *fill*         0x0000000000423d93        0xd 
 .text          0x0000000000423da0     0x18c5 engine/libengine.a(search_full.o)
                0x00000000004253f0                engine::search_full_init(engine::list_t*, engine::board_t*)
                0x0000000000425660                engine::search_full_root(engine::list_t*, engine::board_t*, int, int)
 *fill*         0x0000000000425665        0xb 
 .text          0x0000000000425670      0x663 engine/libengine.a(see.o)
                0x00000000004259b0                engine::see_move(int, engine::board_t const*)
                0x0000000000425c20                engine::see_square(engine::board_t const*, int, int)
 *fill*         0x0000000000425cd3        0xd 
 .text          0x0000000000425ce0      0xc87 engine/libengine.a(sort.o)
                0x0000000000425e40                engine::sort_init()
                0x0000000000425fa0                engine::sort_next(engine::sort_t*)
                0x0000000000426340                engine::sort_init_qs(engine::sort_t*, engine::board_t*, engine::attack_t const*, bool)
                0x00000000004263b0                engine::sort_next_qs(engine::sort_t*)
                0x0000000000426590                engine::good_move(int, engine::board_t const*, int, int)
                0x0000000000426650                engine::history_good(int, engine::board_t const*)
                0x00000000004266f0                engine::history_bad(int, engine::board_t const*)
                0x0000000000426780                engine::note_moves(engine::list_t*, engine::board_t const*, int, int)
                0x00000000004268c0                engine::sort_init(engine::sort_t*, engine::board_t*, engine::attack_t const*, int, int, int)
 *fill*         0x0000000000426967        0x9 
 .text          0x0000000000426970      0x120 engine/libengine.a(square.o)
                0x0000000000426970                engine::square_init()
                0x00000000004269f0                engine::file_from_char(int)
                0x0000000000426a00                engine::rank_from_char(int)
                0x0000000000426a10                engine::file_to_char(int)
                0x0000000000426a20                engine::rank_to_char(int)
                0x0000000000426a30                engine::square_to_string(int, char*, int)
                0x0000000000426a60                engine::square_from_string(char const*)
 .text          0x0000000000426a90      0x4a3 engine/libengine.a(trans.o)
                0x0000000000426a90                engine::trans_is_ok(engine::trans const*)
                0x0000000000426af0                engine::trans_free(engine::trans*)
                0x0000000000426b20                engine::trans_clear(engine::trans*)
                0x0000000000426bd0                engine::trans_init(engine::trans*)
                0x0000000000426c50                engine::trans_alloc(engine::trans*)
                0x0000000000426cd0                engine::trans_inc_date(engine::trans*)
                0x0000000000426d40                engine::trans_store(engine::trans*, unsigned long long, int, int, int, int)
                0x0000000000426e90                engine::trans_retrieve(engine::trans*, unsigned long long, int*, int*, int*, int*, int*)
                0x0000000000426f00                engine::trans_stats(engine::trans const*)
 *fill*         0x0000000000426f33        0xd 
 .text          0x0000000000426f40      0x586 engine/libengine.a(util.o)
                0x0000000000426f40                engine::util_init()
                0x0000000000426f80                engine::my_random_init()
                0x0000000000426fa0                engine::my_random(int)
                0x0000000000426fd0                engine::my_atoll(char const*)
                0x0000000000427010                engine::my_round(double)
                0x0000000000427030                engine::my_free(void*)
                0x0000000000427040                engine::my_fatal(char const*, ...)
                0x0000000000427100                engine::my_malloc(int)
                0x0000000000427120                engine::my_file_read_line(_IO_FILE*, char*, int)
                0x00000000004271a0                engine::my_string_empty(char const*)
                0x00000000004271c0                engine::my_string_equal(char const*, char const*)
                0x0000000000427220                engine::my_strdup(char const*)
                0x0000000000427260                engine::my_string_clear(char const**)
                0x0000000000427280                engine::my_string_set(char const**, char const*)
                0x00000000004272b0                engine::my_timer_reset(engine::my_timer_t*)
                0x00000000004272d0                engine::my_timer_start(engine::my_timer_t*)
                0x00000000004272f0                engine::my_timer_stop(engine::my_timer_t*)
                0x0000000000427330                engine::my_timer_elapsed_real(engine::my_timer_t const*)
                0x0000000000427380                engine::my_timer_elapsed_cpu(engine::my_timer_t const*)
                0x00000000004273d0                engine::my_timer_cpu_usage(engine::my_timer_t const*)
 *fill*         0x00000000004274c6        0xa 
 .text          0x00000000004274d0      0x19a engine/libengine.a(value.o)
                0x00000000004274d0                engine::value_init()
                0x0000000000427580                engine::value_is_ok(int)
                0x0000000000427590                engine::range_is_ok(int, int)
                0x00000000004275c0                engine::value_is_mate(int)
                0x00000000004275d0                engine::value_to_trans(int, int)
                0x0000000000427600                engine::value_from_trans(int, int)
                0x0000000000427630                engine::value_to_mate(int)
 *fill*         0x000000000042766a        0x6 
 .text          0x0000000000427670       0xc6 engine/libengine.a(vector.o)
                0x0000000000427670                engine::vector_init()
                0x00000000004276f0                engine::delta_is_ok(int)
                0x0000000000427710                engine::inc_is_ok(int)
 *fill*         0x0000000000427736        0xa 
 .text          0x0000000000427740      0xae9 engine/libengine.a(attack.o)
                0x0000000000427740                engine::attack_init()
                0x0000000000427e00                engine::is_attacked(engine::board_t const*, int, int)
                0x0000000000427ea0                engine::line_is_empty(engine::board_t const*, int, int)
                0x0000000000427ee0                engine::is_pinned(engine::board_t const*, int, int)
                0x0000000000427f60                engine::attack_is_ok(engine::attack_t const*)
                0x0000000000428010                engine::attack_set(engine::attack_t*, engine::board_t const*)
                0x0000000000428160                engine::piece_attack_king(engine::board_t const*, int, int, int)
 *fill*         0x0000000000428229        0x7 
 .text          0x0000000000428230      0x8cb engine/libengine.a(board.o)
                0x0000000000428230                engine::board_is_ok(engine::board_t const*)
                0x0000000000428240                engine::board_clear(engine::board_t*)
                0x00000000004282b0                engine::board_copy(engine::board_t*, engine::board_t const*)
                0x00000000004282d0                engine::board_is_legal(engine::board_t const*)
                0x0000000000428300                engine::board_is_check(engine::board_t const*)
                0x0000000000428320                engine::board_is_mate(engine::board_t const*)
                0x0000000000428380                engine::board_is_stalemate(engine::board_t*)
                0x0000000000428440                engine::board_is_repetition(engine::board_t const*)
                0x00000000004284e0                engine::board_opening(engine::board_t const*)
                0x0000000000428590                engine::board_endgame(engine::board_t const*)
                0x0000000000428640                engine::board_init_list(engine::board_t*)
 *fill*         0x0000000000428afb        0x5 
 .text          0x0000000000428b00      0x586 engine/libengine.a(book.o)
                0x0000000000428c40                engine::book_init()
                0x0000000000428c60                engine::book_open(char const*)
                0x0000000000428db0                engine::book_close()
                0x0000000000428df0                engine::book_move(engine::board_t*)
 *fill*         0x0000000000429086        0xa 
 .text          0x0000000000429090     0x2012 engine/libengine.a(eval.o)
                0x0000000000429890                engine::eval_init()
                0x0000000000429ab0                engine::eval(engine::board_t const*)
 *fill*         0x000000000042b0a2        0xe 
 .text          0x000000000042b0b0      0x639 engine/libengine.a(fen.o)
                0x000000000042b0b0                engine::board_from_fen(engine::board_t*, char const*)
                0x000000000042b4e0                engine::board_to_fen(engine::board_t const*, char*, int)
 *fill*         0x000000000042b6e9        0x7 
 .text          0x000000000042b6f0      0x260 engine/libengine.a(hash.o)
                0x000000000042b6f0                engine::hash_init()
                0x000000000042b730                engine::hash_key(engine::board_t const*)
                0x000000000042b830                engine::hash_pawn_key(engine::board_t const*)
                0x000000000042b890                engine::hash_material_key(engine::board_t const*)
                0x000000000042b8e0                engine::hash_piece_key(int, int)
                0x000000000042b910                engine::hash_castle_key(int)
                0x000000000042b930                engine::hash_ep_key(int)
                0x000000000042b940                engine::hash_turn_key(int)
 .text          0x000000000042b950      0x287 engine/libengine.a(list.o)
                0x000000000042b950                engine::list_is_ok(engine::list_t const*)
                0x000000000042b970                engine::list_remove(engine::list_t*, int)
                0x000000000042b9b0                engine::list_copy(engine::list_t*, engine::list_t const*)
                0x000000000042ba00                engine::list_sort(engine::list_t*)
                0x000000000042baa0                engine::list_contain(engine::list_t const*, int)
                0x000000000042bae0                engine::list_note(engine::list_t*)
                0x000000000042bb20                engine::list_filter(engine::list_t*, engine::board_t*, bool (*)(int, engine::board_t*), bool)
 *fill*         0x000000000042bbd7        0x9 
 .text          0x000000000042bbe0      0xdac engine/libengine.a(material.o)
                0x000000000042bbe0                engine::material_init()
                0x000000000042bc30                engine::material_clear()
                0x000000000042bc90                engine::material_alloc()
                0x000000000042bcd0                engine::material_get_info(engine::material_info_t*, engine::board_t const*)
 *fill*         0x000000000042c98c        0x4 
 .text          0x000000000042c990      0x34a engine/libengine.a(move.o)
                0x000000000042c990                engine::move_is_ok(int)
                0x000000000042c9b0                engine::move_promote(int)
                0x000000000042c9e0                engine::move_order(int)
                0x000000000042ca00                engine::move_is_capture(int, engine::board_t const*)
                0x000000000042ca30                engine::move_is_under_promote(int)
                0x000000000042ca60                engine::move_is_tactical(int, engine::board_t const*)
                0x000000000042ca90                engine::move_capture(int, engine::board_t const*)
                0x000000000042cad0                engine::move_to_string(int, char*, int)
                0x000000000042cbc0                engine::move_from_string(char const*, engine::board_t const*)
 *fill*         0x000000000042ccda        0x6 
 .text          0x000000000042cce0      0xa96 engine/libengine.a(move_check.o)
                0x000000000042cd70                engine::gen_quiet_checks(engine::list_t*, engine::board_t*)
                0x000000000042d640                engine::move_is_check(int, engine::board_t*)
 *fill*         0x000000000042d776        0xa 
 .text          0x000000000042d780      0x7c3 engine/libengine.a(move_evasion.o)
                0x000000000042ded0                engine::gen_legal_evasions(engine::list_t*, engine::board_t const*, engine::attack_t const*)
                0x000000000042dee0                engine::gen_pseudo_evasions(engine::list_t*, engine::board_t const*, engine::attack_t const*)
                0x000000000042def0                engine::legal_evasion_exist(engine::board_t const*, engine::attack_t const*)
 *fill*         0x000000000042df43        0xd 
 .text          0x000000000042df50     0x1a8a engine/libengine.a(move_gen.o)
                0x000000000042e1f0                engine::gen_quiet_moves(engine::list_t*, engine::board_t const*)
                0x000000000042ebd0                engine::add_pawn_move(engine::list_t*, int, int)
                0x000000000042ec40                engine::gen_moves(engine::list_t*, engine::board_t const*)
                0x000000000042ef00                engine::gen_legal_moves(engine::list_t*, engine::board_t*)
                0x000000000042ef80                engine::gen_captures(engine::list_t*, engine::board_t const*)
                0x000000000042f9a0                engine::add_promote(engine::list_t*, int)
 *fill*         0x000000000042f9da        0x6 
 .text          0x000000000042f9e0      0x3a3 engine/libengine.a(move_legal.o)
                0x000000000042fa30                engine::move_is_pseudo(int, engine::board_t*)
                0x000000000042fb50                engine::quiet_is_pseudo(int, engine::board_t*)
                0x000000000042fc50                engine::pseudo_is_legal(int, engine::board_t*)
 *fill*         0x000000000042fd83        0xd 
 .text          0x000000000042fd90      0x20a engine/libengine.a(posix.o)
                0x000000000042fd90                engine::input_available()
                0x000000000042fe70                engine::now_real()
                0x000000000042ff10                engine::now_cpu()
 *fill*         0x000000000042ff9a        0x6 
 .text          0x000000000042ffa0      0x127 engine/libengine.a(pv.o)
                0x000000000042ffa0                engine::pv_is_ok(unsigned short const*)
                0x0000000000430000                engine::pv_copy(unsigned short*, unsigned short const*)
                0x0000000000430020                engine::pv_cat(unsigned short*, unsigned short const*, int)
                0x0000000000430040                engine::pv_to_string(unsigned short const*, char*, int)
 *fill*         0x00000000004300c7        0x9 
 .text          0x00000000004300d0      0x340 engine/libengine.a(recog.o)
                0x00000000004301f0                engine::recog_draw(engine::board_t const*)
 .text          0x0000000000430410       0x72 /usr/lib/x86_64-linux-gnu/libc_nonshared.a(elf-init.oS)
                0x0000000000430410                __libc_csu_init
                0x0000000000430480                __libc_csu_fini
 .text          0x0000000000430482        0x0 /usr/lib/gcc/x86_64-linux-gnu/5/crtend.o
 .text          0x0000000000430482        0x0 /usr/lib/gcc/x86_64-linux-gnu/5/../../../x86_64-linux-gnu/crtn.o
 *(.gnu.warning)

.fini           0x0000000000430484        0x9
 *(SORT(.fini))
 .fini          0x0000000000430484        0x4 /usr/lib/gcc/x86_64-linux-gnu/5/../../../x86_64-linux-gnu/crti.o
                0x0000000000430484                _fini
